title:cone
[[>]]
[[module Rate]]
[[/>]]

[[module CSS]]
#page-title { display: none; }
.page-title { border-bottom: solid 1px #bbbbbb; color: #990011; font-weight: normal; margin: 0 0 0.6em; padding: 0 0 0.25em; font-size: 200%; }
.page-title p { margin: 0; line-height: normal; }
table.wiki-content-table { margin: -1px auto 0 auto; width: 90%; }
.yui-navset .yui-content{ background-color: initial; border: none; padding: 0; }
.list-pages-box { margin-bottom: 2em; }
.page-tags a:last-of-type::after { content: " are-we-cool-yet best-author-page goi-format global-occult-coalition marshall-carter-and-dark meta pataphysical? possibly-pataphysical prometheus scp wilsons-wildlife _are-we-cool-yet _global-occult-coalition _marshall-carter-and-dark _prometheus _scp-foundation _wilsons-wildlife tagged-correctly"; white-space: normal; word-break: normal; }

.table-scp th { background-color: #e7e7e7 !important; }
.table-scp td { background-color: #f7f7f7; }

.table-tale th { background-color: #fedfc9 !important; border-color: #844e2a !important; }
.table-tale td { background-color: #feefe4; border-color: #844e2a !important; }

.table-component th { background-color: #cce8ff !important; border-color: #0886cc !important; }
.table-component td { background-color: #e7f7ff; border-color: #0886cc !important; }

.table-author th { background-color: #edd !important; border-color: #b44 !important; }
.table-author td { background-color: #fee; border-color: #b44 !important; }
[[/module]]

[[module ListPages name="cone%" order="random" limit="1" category="fragment"]]
[[div class="page-title"]]
%%title_linked%%
[[/div]]
%%content%%
[[/module]]

+ SCPs

[[div class="table-scp"]]
[[module ListPages name="scp-3939" limit="1"]]
||~ Number || [[[SCP-3939|3939]]] ||~ Title || [NUMBER RESERVED; AWAITING RESEARCHER] ||
||~ Rating || +%%rating%% ||~ Notes || March 2018 #2; most Offset pages (65) ||
||~ Published || March 2018 ||~ Format screw? || Oh yeah ||

||~ Summary || A multiple choice story in which you, ████ ████████, a disgraced researcher, must discover what SCP-3939 really is. ||
||~ Quote || //"I quit." he tells you. "I fucking quit. I'm done here. I'm done with you. I'm done with 3939. I'm done with the Foundation. I'm done with fuckers like you getting to Class 4. You'll make a great O5 someday, you know that? Fuck you. Fuck you, ████."// ||

||~ Last comment || #%%comments%% from %%commented_by_linked%% on %%commented_at%% ||
[[/module]]

[[module ListPages name="scp-3211" limit="1"]]
||~ Number || [[[SCP-3211|3211]]] ||~ Title || There Is No Canon ||
||~ Rating || +%%rating%% ||~ Notes || Possibly most coded article (except 2212?); [[[https://www.reddit.com/r/SCPDeclassified/comments/8ek9j7/scp3211_there_is_no_canon/?ref=share&ref_source=link|4th highest rated Declassified]]]||
||~ Published || April 2018 ||~ Format screw? || Technically ||

||~ Summary || "It's basically SCP-055, rebooted to fit the current site standards." - [https://www.reddit.com/r/SCPDeclassified/comments/8ek9j7/scp3211_there_is_no_canon/dxwzu9t/ /u/JPS_TEAM_B_6905] ||
||~ Quote || //By proceeding to read this document you acknowledge and accept that you are about to be exposed to an anomalous effect.// ||

||~ Last comment || #%%comments%% from %%commented_by_linked%% on %%commented_at%% ||
[[/module]]

[[module ListPages name="scp-3984" limit="1"]]
||~ Number || [[[SCP-3984|3984]]] ||~ Title || Poking Death with a Stick ||
||~ Rating || +%%rating%% ||~ Notes || [[[end-of-death-hub|End of Death]]] ||
||~ Published || May 2018 ||~ Format screw? || Indeed ||

||~ Summary || When death breaks... poke it with a stick.  ||
||~ Quote || //One round from a standard-issue security handgun was fired into the forehead of D-10273 by Dr. Young.// ||

||~ Last comment || #%%comments%% from %%commented_by_linked%% on %%commented_at%% ||
[[/module]]

[[module ListPages name="scp-3790" limit="1"]]
||~ Number || [[[SCP-3790|3790]]] ||~ Title || Department of Abnormalities ||
||~ Rating || +%%rating%% ||~ Notes || Co-authored with [[*user djkaktus]] ||
||~ Published || June 2018 ||~ Format screw? || No, for once! ||

||~ Summary || At the end of a corridor, an elevator takes you to you a quiet, dark place. ||
||~ Quote || //A pedestal rests in the middle of the chamber. Four parallel lines in the dust, consistent with finger marks, imply that whatever was upon it has recently been removed.// ||

||~ Last comment || #%%comments%% from %%commented_by_linked%% on %%commented_at%% ||
[[/module]]
[[/div]]

+ Tales

[[div class="table-tale"]]
[[module ListPages fullname="omega-k" limit="1"]]
||~ Title || [[[omega-k|ΩK]]] ||~ Length || 4688 words ||
||~ Rating || +%%rating%% ||~ Notes || [[[end-of-death-hub|End of Death]]] ||
||~ Published || May 2018 ||~ Format screw? || Is it possible for a tale? ||

||~ Summary || It's the end of the world, but nobody is panicking. ||
||~ Quote || //"I just find it funny how this is a K-class scenario and all, but the mundane day-to-day stuff just carries on."// ||

||~ Last comment || #%%comments%% from %%commented_by_linked%% on %%commented_at%% ||
[[/module]]


[[module ListPages fullname="the-foundation-wants-a-robot-army" limit="1"]]
||~ Title || [[[the-foundation-wants-a-robot-army|5 Reasons The Foundation Wants A Robot Army]]] ||~ Co-authored with || [[*user Captain Kirby]], [[*user OthellotheCat]] and [[*user Veiedhimaedhr]] ||
||~ Rating || +%%rating%% ||~ Notes || [[[end-of-death-hub|End of Death]]] ||
||~ Published || June 2018 ||~ Format screw? || Is it possible for a tale? ||

||~ Summary || Three GoIs come together to discuss a long-term solution. Performed as a real chat and transcripted with only minor edits. ||
||~ Quote || //"La vida loca."// ||

||~ Last comment || #%%comments%% from %%commented_by_linked%% on %%commented_at%% ||
[[/module]]
[[/div]]

+ Other

[[div class="table-component"]]
[[module ListPages name="earthworm" limit="1" category="component"]]
||~ Title || [[[component:earthworm|Earthworm Series Navigator]]] ||~ Page type || component ||
||~ Rating || +%%rating%% ||~ Appearance || Sick as hell ||
||~ Published || May 2018 ||~ Format screw? || No? ||

||~ Summary |||||| A more decorative series navigator to replace cheap plaintext ones. Instructions for use are in the author comment. ||
||~ Quote |||||| //.earthworm div:nth-child(2).no a, .earthworm a[href="/"] { color: #333; text-decoration: none; cursor: text; pointer-events: none; }// ||

||~ Last comment || #%%comments%% from %%commented_by_linked%% on %%commented_at%% ||
[[/module]]
[[/div]]

[[div class="table-author"]]
[[module ListPages name="cone" limit="1"]]
||~ Title || [[[cone]]] ||~ Page type || Author ||
||~ Rating || +%%rating%% ||~ Please rate || //Please// ||
||~ Published || June 2018 ||~ Format screw? || Unsure ||

||~ Summary || A collection of articles written by [[*user Croquembouche]]. ||
||~ Quote || //A collection of articles written by [[*user Croquembouche]].// ||

||~ Last comment || #%%comments%% from %%commented_by_linked%% on %%commented_at%% ||
[[/module]]
[[/div]]

[[collapsible show="+ Other things the cone has done"]]
* Suggested the [[[http://www.scp-wiki.net/system:page-tags/tag/interactive|interactive]]] tag
* Created [[[http://www.scp-wiki.net/forum/t-6086502#post-3829009|the site logo]]] for Pride Month 2018
[[/collapsible]]

@@ @@

[[tabview]]
[[tab Workbench]]
[[/tab]]

[[tab Tag Stuff]]

**Pages tagged "doomsday2018" but are otherwise untagged**
//If you see this and the tag isn't the current contest, please feel free to correct it//
[[collapsible]]
[[module ListPages tags="+doomsday2018 -scp -tale -goi-format -hub" separate="no"]]
* %%title_linked%% by %%created_by%% (%%rating%%)
[[/module]]
[[/collapsible]]

**List of pages that can appear on this author page**
//Check the author comment if you want to contribute//
[[collapsible]]
[[module ListPages name="cone%" separate="no" category="fragment"]]
* %%title_linked%% by %%created_by%%
[[/module]]
[[/collapsible]]

**All untagged pages**
[[collapsible]]
[[module ListPages tags="-" separate="no"]]
* %%title_linked%% by %%created_by%% (%%created_at%%)
[[/module]]
[[/collapsible]]

[[/tab]]
[[tab Title Fetching Tool]]

[[html]]
<head>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js" crossorigin="anonymous"></script>
    <style type="text/css">
      .log p {
        margin-top: 0;
        margin-bottom: 0;
      }
      .error {
        color: red;
      }
      textarea {
        white-space: nowrap;
      }
    </style>
    <script type="text/javascript">
      
      "use strict";
      
      String.prototype.toCamelCase = function() {return this.toLowerCase().replace(/[^\w\s\-]/g, '').replace(/[^a-z0-9]/g, ' ').replace(/^\s+|\s+$/g, '').replace(/\s(.)/g, function(match,group) {return group.toUpperCase()})};
      
      var list = {
        original: "",
        lines: [],
        scps: [],
        scpTypes: [],
        placeholder: [],
      };
      
      var one = 0, two = 0, three = 0, four = 0, joke = 0, five = 0, explained = 0, archived = 0, mystery = 0;
      
      var vlog = function(data, error) {
        if(typeof error === "undefined") {
          $("div.log").append("<p>" + data + "</p>");
          console.log(data);
        } else {
          $("div.log").append("<p class='error'>" + data + "</p>");
        };
      };
      
      var pagesToFetch = [];
      var pageData = {
        scpSeries: [],
        scpSeries2: [],
        scpSeries3: [],
        scpSeries4: [],
        scpSeries5: [],
        scpEx: [],
        archivedScps: [],
        jokeScps: [],
      };
      
      var fetch = function(index) {
        // This function is called towards the end of #pull, handles grabbing and presenting the data.
        // must return array of objects {url: title:} for the complete series
        
        //possible pagenames: 1,2,3,4,5,ex,arc,joke
        //urls: scp-series, append -x, scp-ex, joke-scps, archived-scps
        //only archived-scps has a nonstandard format
        vlog("Fetching " + pagesToFetch[index] + "...");
        $.ajax({
          type: "GET",
          url: "http://allorigins.me/get?url=" + encodeURIComponent("http://www.scp-wiki.net/" + pagesToFetch[index]),
          dataType: "json",
          success: function(response) {
            
            //code for manipulating mainlist goes here
            var mainlist = $(response.contents).find("#page-content .content-panel:first ul li");
            console.log(mainlist);
            
            for(let i = 0; i < mainlist.length; i++) {
              var splits = [];
              splits = mainlist[i].innerHTML.split(" - ");
              switch(splits.length) {
                case 0:
                  throw new Error("No splits - " + pagesToFetch[index] + " at index " + i);
                  break;
                case 1:
                  // Ignore this entry
                  splits = ["Invalid","Invalid"];
                  break;
                case 2:
                  // This is the intended value
                  break;
                default:
                  // At negative values(?) + 3 and above
                  // Keep first value, concatenate the rest
                  splits = [splits[0], splits.slice(1).join(" - ")];
              };
              
              // replace HTML with wikicode and format the URL into a title
              splits[0] = splits[0].replace(/<a href="\/(scp-\S+)">SCP-\S+<\/a>/,"$1".toUpperCase());
              splits[1] = splits[1].replace("<strong>","**").replace("</strong>","**").replace("<em>","//").replace("</em>","//");
              
              // Log these splits to the thing
              pageData[pagesToFetch[index].toCamelCase()].push({url: splits[0], title: splits[1]});
              
              // Now we check all of OUR SCPs against the mainlist
              // list.scpTypes has a list of the urls our SCPs need, in the right order.
              for(let j = 0; j < list.scpTypes.length; j++) {
                if(list.scpTypes[j] == pagesToFetch[index]) {
                  // the SCP we're evaluating is of the correct type
                  if(list.scps[j].toUpperCase() == splits[0].toUpperCase()) {
                    vlog("Found a match for " + list.scps[j] + " (" + splits[1] + ")");
                    // Yay we did it! Now we need to replace %%actual-title%%
                    list.lines[j] = list.lines[j].replace("%%actual-title%%",splits[1]);
                  };
                };
              };
            };
            
            if(++index < pagesToFetch.length) {
              fetch(index);
            } else {
              // now that all the lines have been replaced, substitute this into the textarea
              vlog("Replacing title placeholders...");
              $("#input").val(list.lines.join("\n"));
              vlog("Done.");
              vlog("Please check for any unreplaced title placeholders");
            };
          },
        });
      }
      
      $(document).ready(function() {
        
        $("#clear").on("click", function() {
          $("div.log").empty();
        });
        
        $("#fetch").on("click", function() {
          
          list = {
            original: "",
            lines: [],
            scps: [],
            scpTypes: [],
            placeholder: [],
          };
          one = 0, two = 0, three = 0, four = 0, joke = 0, five = 0, explained = 0, archived = 0, mystery = 0;
          
          try {
            vlog("Evaluating input...");
            // Step one: take the original text and save it to the variable
            list.original = $("#input").val();
            // Save this to the savebox
            $("#savebox").val(list.original);
            
            // Step two: split the list up into lines
            list.lines = list.original.split("\n");
            
            if(list.lines.length === 1 && list.lines[0] == "") {
              throw new Error("Input is empty");
            };
            
            // Step three: search for SCPs
            // Go through each line and find the matching SCPs
            // list.scps is currently an empty array
            
            //fist, check if there are ANY scps or title placeholders
            if(list.original.search(/%%actual-title%%/) == -1) {
              throw new Error("No title placeholders present");
            };
            if(list.original.search(/[scp]{3}-/i) == -1) {
              throw new Error("No SCPs detected");
            };
            
            var missingPlaceholders = [];
            var missingScps = [];
            
            for(let line = 0; line < list.lines.length; line++) {
              // Iterating through each line
              // First, we need to check what lines are missing a title placeholder
              list.placeholder[line] = list.lines[line].search(/%%actual-title%%/);
              if(list.placeholder[line] == -1) {
                missingPlaceholders.push(line + 1);
              };
              
              // Next, check which lines are missing SCP
              list.scps[line] = list.lines[line].search(/[scp]{3}-/i);
              if(list.scps[line] == -1) {
                missingScps.push(line + 1);
              };
              
            }
            
            if(missingPlaceholders.length) {
              vlog("Warning: no title placeholders detected on line(s) " + missingPlaceholders.join(", "), true);
            }
            if(missingScps.length) {
              vlog("Warning: no SCPs detected on line(s) " + missingScps.join(", "), true);
            }
            
            for(let line = 0; line < list.lines.length; line++) {
              // still iterating through lines, but this time we know which ones to avoid
              if(missingPlaceholders.includes(line + 1) || missingScps.includes(line + 1)) {
                //do nothing, skip
              } else {
                // work out what scp we need to fetch
                if(list.lines[line].match(/([scp]{3}-\S+-j)\D/i)) {
                  
                  // match Joke SCPs
                  list.scps[line] = list.lines[line].match(/([scp]{3}-\S+-j)\D/i)[1];
                  list.scpTypes[line] = "joke-scps";
                  
                } else if(list.lines[line].match(/(scp-\d{3})\D/i)) {
                  
                  // match series 1 SCPs
                  list.scps[line] = list.lines[line].match(/(scp-\d{3})\D/i)[1];
                  list.scpTypes[line] = "scp-series";
                  
                } else if(list.lines[line].match(/(scp-1\d{3})\D/i)) {
                  
                  // match series 1 SCPs
                  list.scps[line] = list.lines[line].match(/(scp-1\d{3})\D/i)[1];
                  list.scpTypes[line] = "scp-series-2";
                  
                } else if(list.lines[line].match(/(scp-2\d{3})\D/i)) {
                  
                  // match series 1 SCPs
                  list.scps[line] = list.lines[line].match(/(scp-2\d{3})\D/i)[1];
                  list.scpTypes[line] = "scp-series-3";
                  
                } else if(list.lines[line].match(/(scp-3\d{3})\D/i)) {
                  
                  // match series 1 SCPs
                  list.scps[line] = list.lines[line].match(/(scp-3\d{3})\D/i)[1];
                  list.scpTypes[line] = "scp-series-4";
                  
                } else if(list.lines[line].match(/(scp-4\d{3})\D/i)) {
                  
                  // match series 1 SCPs
                  list.scps[line] = list.lines[line].match(/(scp-4\d{3})\D/i)[1];
                  list.scpTypes[line] = "scp-series-5";
                  
                  // TODO: add detectors for -EX and -ARC
                  
                } else {
                  vlog("Unsure whether or not there is an SCP on line " + (line + 1));
                };
                
              };
              
              // squeeze this in while we're still looping
              if(list.scps[line] == -1) {
                list.scps[line] = "unknown";
              };
            };
            
            
            vlog("Found " + list.scps.length + " entries: " + list.scps.join(", ").toUpperCase());
            
            // count up total numbers of jokes and series Xs
            for(let i = 0; i < list.scpTypes.length; i++) {
              switch(list.scpTypes[i]) {
                case "scp-series":
                  one++;
                  break;
                case "scp-series-2":
                  two++;
                  break;
                case "scp-series-3":
                  three++;
                  break;
                case "scp-series-4":
                  four++;
                  break;
                case "scp-series-5":
                  five++;
                  break;
                case "joke-scps":
                  joke++;
                  break;
                case "scp-ex":
                  explained++;
                  break;
                case "archived-scps":
                  archived++;
                  break;
                default:
                  mystery++;
              };
            };
            vlog("Found a total of " + one + " series 1s, " + two + " series 2s, " + three + " series 3s, " + four + " series 4s, " + five + " series 5s, " + explained + " -EXs, " + archived + " -ARCs, " + (mystery ? ", " : " and ") + joke + " jokes" + (mystery ? " and " + mystery + " complete mysteries." : "."));
            if(mystery) {
              vlog(mystery + " unknown article(s) - review these manually after fetching", true);
            };
            
            if(!(one || two || three || four || five || joke || explained || archived)) {
              throw new Error("Not fetching any pages");
            }
              
            vlog("Ready to fetch, Captain.");
            
            $("#pull").prop("disabled", false);
          }
          catch(error) {
            vlog(error + ", terminating", true);
          }
        });
        
        
        // PULL
        
        
        $("#pull").on("click", function() {
          
          $("#pull").prop("disabled", true);
          $("#fetch").prop("disabled", true);
          vlog("Fetching...");
          
          try {
            
            // so what we're going to do here is define a new function that works out which pages we need to fetch.
            // then, using promises, we grab each one in order.
            
            pagesToFetch = []; // list of all pages to fetch
            if(one) {
              pagesToFetch.push("scp-series");
            };
            if(two) {
              pagesToFetch.push("scp-series-2");
            };
            if(three) {
              pagesToFetch.push("scp-series-3");
            };
            if(four) {
              pagesToFetch.push("scp-series-4");
            };
            if(five) {
              pagesToFetch.push("scp-series-5");
            };
            if(explained) {
              pagesToFetch.push("scp-ex");
            };
            if(archived) {
              pagesToFetch.push("archived-scps");
            };
            if(joke) {
              pagesToFetch.push("joke-scps");
            };
            
            // the functions that fetch this MUST return a single ARRAY of objects {url: "scp-XXX", title: string"}
            console.log(pagesToFetch);
            fetch(0);
            // the fetch function will handle the remainder of the operation.
            
            //series 2, 3, 4, joke
            
            $("#pull").prop("disabled", false);
            $("#fetch").prop("disabled", false);
          }
          catch(error) {
            vlog(error + ", terminating", true);
          }
        });
      });
      
    </script>
  </head>
  <body>
    <h1>SCP title-fetching tool v1.0</h1>
    <p>Made by Croquembouche for the SCP wiki news. This tool uses <a href="https://github.com/gnuns/allorigins">All Origins</a>.</p>
    <p>For each line, %%actual-title%% will be replaced with the title of the <b>first</b> correctly-formatted SCP mentioned on that line.</p>
    <p>Use SCP URLs instead of names - i.e., "scp-botnik-j" as opposed to "SCP-\̅\̅\̅\̅-J"</p>
    <p>Currently supports Series 1 through 4 and Joke SCPs. Does not support tales, 001 proposals, or nonstandard SCPs that are not Jokes (such as SCP-S). Does not support Explained or Archived SCPs, and may in fact fetch the wrong titles for these.</p>
    <p>Usage: Paste your list into the box, ideally from shaggy's author page. Evaluate the list and review the log underneath to see if there are any errors. If there aren't, or you just don't care, hit Fetch.</p>
    <p>If the list is changed after evaluating it, make sure to re-evaluate before fetching again.</p>
    <div id="wrapper">
      <p>
        <textarea rows="20" cols="80" id="input"></textarea>
      </p>
      <p>
        <textarea rows="2" cols="80" id="savebox">Original text will be preserved here after evaluating</textarea>
      </p>
      <p>
        <button type="button" id="fetch">Evaluate list</button>
        <button type="button" id="clear">Clear log</button>
        <button type="button" id="pull" disabled>Fetch titles</button>
      </p>
      <div class="log">
        <p>Waiting for input...</p>
      </div>
    </div>
  </body>
[[/html]]

[[/tab]]
[[/tabview]]
